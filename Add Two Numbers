/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        
        ListNode head = null;
        ListNode prev = null;
        ListNode curr = null;

        int carry = 0;
        int mod = 0;

        while(l1 != null || l2 != null || carry != 0)
        {

            mod  = carry ;

            if(l1 != null)
            {
                mod += l1.val;
                l1 =l1.next;
            }

             if(l2 != null)
            {
                mod += l2.val;
                l2 =l2.next;
            }

            carry = mod / 10;
            mod = mod % 10 ;

            curr = new ListNode(mod);

            if(prev == null )
            {
                head = curr; 
            }
            else{
                prev.next = curr;
            }

            prev = curr;
        }

        return head;
    }
}
